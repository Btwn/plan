SET DATEFIRST 7
SET ANSI_NULLS OFF
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
SET LOCK_TIMEOUT -1
SET QUOTED_IDENTIFIER OFF
SET NOCOUNT ON
SET IMPLICIT_TRANSACTIONS OFF
GO
ALTER PROCEDURE spVerContXMov
@Modulo	char(5)

AS BEGIN
DECLARE @ID		int,
@Movto	varchar(20)
DECLARE @Mov TABLE (ID int identity(1,1), Mov varchar(20))
DECLARE cMov1 CURSOR FOR
SELECT x.ID,
mt.Mov
FROM ContX x WITH(NOLOCK),
MovTipo mt
WHERE x.Modulo = @Modulo
AND x.Estatus = 'ACTIVO'
AND mt.Modulo = x.Modulo
AND x.Mov = '('+RTRIM(mt.Clave)+')'
ORDER BY x.ID
OPEN cMov1
FETCH NEXT FROM cMov1 INTO @ID, @Movto
WHILE @@FETCH_STATUS = 0
BEGIN
IF NOT EXISTS(SELECT Mov FROM @Mov WHERE Mov = @Movto)
INSERT INTO @Mov(Mov) VALUES(@Movto)
FETCH NEXT FROM cMov1 INTO @ID, @Movto
END
CLOSE cMov1
DEALLOCATE cMov1
DECLARE cMov2 CURSOR FOR
SELECT x.ID, x.Mov
FROM ContX x WITH(NOLOCK)
WHERE x.Modulo = @Modulo
AND x.Estatus = 'ACTIVO'
AND x.Mov NOT IN (SELECT '('+RTRIM(mt.Clave)+')'
FROM MovTipo mt WITH(NOLOCK)
WHERE mt.Modulo = x.Modulo)
ORDER BY x.ID
OPEN cMov2
FETCH NEXT FROM cMov2 INTO @ID, @Movto
WHILE @@FETCH_STATUS = 0
BEGIN
IF NOT EXISTS(SELECT Mov FROM @Mov WHERE Mov = @Movto)
INSERT INTO @Mov(Mov) VALUES(@Movto)
FETCH NEXT FROM cMov2 INTO @ID, @Movto
END
CLOSE cMov2
DEALLOCATE cMov2
SELECT Mov FROM @Mov ORDER BY ID
END

